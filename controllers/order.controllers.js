const orderService = require("../services/orderService");
const User = require("../models/user");

// üîπ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
const createOrder = async (req, res) => {
  const { productName, weight, district, paymentMethod, wallet } = req.body;

  if (!productName || !weight || !district || !paymentMethod || !wallet) 
    return res.status(400).json({ message: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });

  try {
    const order = await orderService.createOrder(req.body);
  
    // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (—Ç–æ–∫–µ–Ω –ø–µ—Ä–µ–¥–∞–Ω –∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω)
    if (req.user) {
      console.log("üßê req.user:", req.user);

      console.log("üõ† ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–æ–∫–µ–Ω–∞:", req.user?.userId);
      const updatedUser = await User.findByIdAndUpdate(
        req.user.userId,  // –ò—Å–ø–æ–ª—å–∑—É–µ–º userId, –∞ –Ω–µ _id
        { $push: { orders: order._id },
        $push: { orderHistory: order }, }, 
        { new: true }  // üîπ –í–µ—Ä–Ω–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
      )
      console.log("üìå –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", updatedUser);
    }
    
    res.status(201).json(order);
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error: error.message });
  }
};



// üîπ –ü–æ–∏—Å–∫ –∑–∞—è–≤–∫–∏ –ø–æ ID
const getOrderById = async (req, res) => {
  try {
    const order = await orderService.getOrderById(req.params.id);
    order.error
      ? res.status(404).json({ message: order.error })
      : res.json(order);
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error: error.message });
  }
};

// üîπ –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
const extendOrder = async (req, res) => {
  try {
    const result = await orderService.extendOrder(req.params.id);
    result.error
      ? res.status(400).json({ message: result.error })
      : res.json(result);
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error: error.message });
  }
};

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
const getRemainingTime = async (req, res) => {
  try {
    const result = await orderService.getRemainingTime(req.params.id);
    result.error
      ? res.status(404).json({ message: result.error })
      : res.json(result);
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error: error.message });
  }
};

module.exports = { createOrder, getOrderById, extendOrder, getRemainingTime };
