const Order = require("../models/order.js");

// üîπ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ (–∂–∏–≤–µ—Ç 30 –º–∏–Ω—É—Ç)
const createOrder = async (data) => {
  console.log("üì© –î–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏:", data); 
  const expiresAt = new Date(Date.now() + 30 * 60 * 1000);
  return await new Order({ ...data, expiresAt }).save();
};

// üîπ –ü–æ–∏—Å–∫ –∑–∞—è–≤–∫–∏ –ø–æ ID
const getOrderById = async (orderId) => {
  const order = await Order.findById(orderId);
  if (!order) return { error: "–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" };
  return order;
};

// üîπ –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ (+10 –º–∏–Ω—É—Ç, –Ω–æ –Ω–µ –±–æ–ª–µ–µ 1 —á–∞—Å–∞)
const extendOrder = async (orderId) => {
  const order = await Order.findById(orderId);
  if (!order) return { error: "–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" };

  const now = new Date();
  const maxExtendTime = new Date(order.createdAt.getTime() + 60 * 60 * 1000);

  if (now > order.expiresAt) return { error: "–ó–∞—è–≤–∫–∞ —É–∂–µ –∏—Å—Ç–µ–∫–ª–∞" };
  if (now - order.lastExtendAt < 30 * 1000) return { error: "–ü—Ä–æ–¥–ª–µ–≤–∞—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 30 —Å–µ–∫—É–Ω–¥" };
  if (order.expiresAt >= maxExtendTime) return { error: "–ó–∞—è–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–¥–ª–µ–Ω–∞ –±–æ–ª–µ–µ 1 —á–∞—Å–∞" };

  order.expiresAt = new Date(order.expiresAt.getTime() + 10 * 60 * 1000);
  order.lastExtendAt = now;
  await order.save();

  return { success: "–ó–∞—è–≤–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞", expiresAt: order.expiresAt };
};

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
const getRemainingTime = async (orderId) => {
  const order = await Order.findById(orderId);
  if (!order) return { error: "–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" };

  return { remainingTime: Math.max(0, order.expiresAt - new Date()) };
};

// üîπ –£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–µ–∫—à–∏—Ö –∑–∞—è–≤–æ–∫
const cleanExpiredOrders = async () => {
  await Order.deleteMany({ expiresAt: { $lt: new Date() } });
};

module.exports = {
  createOrder,
  getOrderById,
  extendOrder,
  getRemainingTime,
  cleanExpiredOrders,
};
